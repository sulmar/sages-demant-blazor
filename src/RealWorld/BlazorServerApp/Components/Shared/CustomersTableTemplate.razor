@inject ICustomerRepository repository
@inject NavigationManager navigation
@using Microsoft.AspNetCore.WebUtilities

<TableTemplate Items=@Customers>
    <HeaderTemplate>
        <th>Id</th>
        <th>Name</th>
        <th>Email</th>
        <th></th>
    </HeaderTemplate>
    <RowTemplate Context="customer">
        <td>@customer.Id</td>
        <td>@customer.Name</td>
        <td>@customer.Email</td>
        <td><a href="/customers/view/@customer.Id" class="btn btn-primary">View</a></td>
        <td><a href="/customers/edit/@customer.Id" class="btn btn-secondary">Edit</a></td>
        <td><button type="button" @onclick=@(()=>HandleDelete(customer)) class="btn btn-danger">Delete</button></td>
    </RowTemplate>
</TableTemplate>

@code {

    [Parameter, EditorRequired]
    public IEnumerable<Customer>? Customers { get; set; }

    private async Task HandleDelete(Customer customer)
    {
        await repository.DeleteAsync(customer.Id);

        var query = new Dictionary<string, string>
            {
                ["text"] = "Abc",
                ["city"] = "Warsaw"
            };
        
        // dotnet package Microsoft.AspNetCore.Utilities
        var url = QueryHelpers.AddQueryString("/customers", query);

        navigation.NavigateTo(url);
    }

}
